{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["table","sports","history","politics","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isModalOpen","setIsModalOpen","amount","category","difficulty","quiz","setQuiz","fetchQuestions","url","a","axios","catch","err","console","log","response","data","results","length","nextQuestion","oldIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","type","id","onChange","min","max","onClick","Loading","Modal","toFixed","App","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8958ee4c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\n\r\nconst table = {\r\n  sports: 21,\r\n  history: 23,\r\n  politics: 24,\r\n};\r\n\r\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\r\n\r\nconst url = \"\";\r\nconst tempURL =\r\n  \"https://opentdb.com/api.php?amount=10&category=23&difficulty=medium&type=multiple\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [waiting, setWaiting] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [error, setError] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [quiz, setQuiz] = useState({\r\n    amount: 10,\r\n    category: \"sports\",\r\n    difficulty: \"easy\",\r\n  });\r\n\r\n  const fetchQuestions = async (url) => {\r\n    setLoading(true);\r\n    setWaiting(false);\r\n    const response = await axios(url).catch((err) => console.log(err));\r\n    // console.log(response);\r\n    if (response) {\r\n      const data = response.data.results;\r\n      // console.log(data);\r\n      if (data.length > 0) {\r\n        setQuestions(data);\r\n        setLoading(false);\r\n        setWaiting(false);\r\n        setError(false);\r\n      } else {\r\n        setWaiting(true);\r\n        setError(true);\r\n      }\r\n    } else {\r\n      setWaiting(true);\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    setIndex((oldIndex) => {\r\n      const index = oldIndex + 1;\r\n      if (index > questions.length - 1) {\r\n        openModal();\r\n        return 0;\r\n      } else {\r\n        return index;\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkAnswer = (value) => {\r\n    if (value) {\r\n      setCorrect((oldState) => oldState + 1);\r\n    }\r\n    nextQuestion();\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setWaiting(true);\r\n    setCorrect(0);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    // console.log(name, value);\r\n    setQuiz({ ...quiz, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { amount, category, difficulty } = quiz;\r\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category${table[category]}&type=multiple`;\r\n    fetchQuestions(url);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        waiting,\r\n        loading,\r\n        questions,\r\n        index,\r\n        correct,\r\n        error,\r\n        isModalOpen,\r\n        nextQuestion,\r\n        checkAnswer,\r\n        closeModal,\r\n        handleChange,\r\n        handleSubmit,\r\n        quiz,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst SetupForm = () => {\r\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext();\r\n  return (\r\n    <main>\r\n      <section className=\"quiz quiz-small\">\r\n        <form className=\"setup-form\">\r\n          <h2>setup quiz</h2>\r\n          {/*amount*/}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\">nuber of questions</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amount\"\r\n              value={quiz.amount}\r\n              onChange={handleChange}\r\n              className=\"form-input\"\r\n              min={1}\r\n              max={50}\r\n            />\r\n          </div>\r\n          {/*category*/}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"category\">category</label>\r\n            <select\r\n              name=\"category\"\r\n              id=\"category\"\r\n              className=\"form-input\"\r\n              value={quiz.category}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"sports\">sports</option>\r\n              <option value=\"history\">history</option>\r\n              <option value=\"politics\">politics</option>\r\n            </select>\r\n          </div>\r\n          {/*difficulty*/}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"difficulty\">difficulty</label>\r\n            <select\r\n              name=\"difficulty\"\r\n              id=\"difficulty\"\r\n              className=\"form-input\"\r\n              value={quiz.difficulty}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"easy\">easy</option>\r\n              <option value=\"medium\">medium</option>\r\n              <option value=\"hard\">hard</option>\r\n            </select>\r\n          </div>\r\n          {error && (\r\n            <p className=\"error\">\r\n              can't generate questions, please try different options!\r\n            </p>\r\n          )}\r\n          <button type=\"submit\" onClick={handleSubmit} className=\"submit-btn\">\r\n            start\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SetupForm;\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <main>\r\n      <div className='loading'></div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst Modal = () => {\r\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext();\r\n  return (\r\n    <div\r\n      className={`${\r\n        isModalOpen ? \"modal-container isOpen\" : \"modal-container\"\r\n      }`}\r\n    >\r\n      <div className=\"modal-content\">\r\n        <h2>congrats!</h2>\r\n        <p>\r\n          You answered {((correct / questions.length) * 100).toFixed(0)}% of\r\n          questions correctly!\r\n        </p>\r\n        <button className=\"close-btn\" onClick={closeModal}>\r\n          play again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nimport SetupForm from \"./SetupForm\";\r\nimport Loading from \"./Loading\";\r\nimport Modal from \"./Modal\";\r\nfunction App() {\r\n  const {\r\n    waiting,\r\n    loading,\r\n    questions,\r\n    index,\r\n    correct,\r\n    nextQuestion,\r\n    checkAnswer,\r\n  } = useGlobalContext();\r\n  if (waiting) {\r\n    return <SetupForm />;\r\n  }\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  const { question, incorrect_answers, correct_answer } = questions[index];\r\n  // const answers = [...incorrect_answers, correct_answer];\r\n  let answers = [...incorrect_answers];\r\n  const tempIndex = Math.floor(Math.random() * 4);\r\n  // console.log(tempIndex);\r\n  if (tempIndex === 3) {\r\n    answers.push(correct_answer);\r\n  } else {\r\n    answers.push(answers[tempIndex]);\r\n    answers[tempIndex] = correct_answer;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <Modal />\r\n      <section className=\"quiz\">\r\n        <p className=\"correct-answers\">\r\n          correct answers: {correct}/{index}\r\n        </p>\r\n        <article className=\"container\">\r\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\r\n          <div className=\"btn-container\">\r\n            {answers.map((answer, index) => {\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  className=\"answer-btn\"\r\n                  dangerouslySetInnerHTML={{ __html: answer }}\r\n                  onClick={() => checkAnswer(correct_answer === answer)}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </article>\r\n        <button className=\"next-question\" onClick={nextQuestion}>\r\n          next question\r\n        </button>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { AppProvider } from './context'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}